plugins {
    id 'org.springframework.boot' version '3.1.0'
    id 'io.spring.dependency-management' version '1.1.0'
    id 'java'
}

group = 'com.dollarfunding.core'
version = '1.0.0'

java {
    sourceCompatibility = JavaVersion.VERSION_17
    targetCompatibility = JavaVersion.VERSION_17
}

repositories {
    mavenCentral()
    maven { url 'https://repo.spring.io/milestone' }
    gradlePluginPortal()
}

dependencies {
    implementation 'org.springframework.boot:spring-boot-starter-web:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-data-jpa:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-security:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-validation:3.1.0'
    implementation 'org.springframework.boot:spring-boot-starter-actuator:3.1.0'
    implementation 'org.postgresql:postgresql:42.6.0'
    implementation 'com.auth0:java-jwt:4.4.0'
    implementation 'org.flywaydb:flyway-core:9.19.0'
    implementation 'io.micrometer:micrometer-registry-prometheus:1.11.0'
    implementation 'org.projectlombok:lombok:1.18.26'
    implementation 'com.vladmihalcea:hibernate-types-60:2.21.1'
    implementation 'jakarta.persistence:jakarta.persistence-api:3.1.0'
    implementation 'jakarta.validation:jakarta.validation-api:3.0.2'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.15.2'
    
    annotationProcessor 'org.projectlombok:lombok:1.18.26'
    
    testImplementation 'org.springframework.boot:spring-boot-starter-test:3.1.0'
    testImplementation 'org.testcontainers:postgresql:1.18.3'
    testImplementation 'org.junit.jupiter:junit-jupiter-api:5.9.2'
    testImplementation 'org.mockito:mockito-core:5.3.1'
    
    testRuntimeOnly 'org.junit.jupiter:junit-jupiter-engine:5.9.2'
}

test {
    useJUnitPlatform()
    testLogging {
        events "passed", "skipped", "failed"
        exceptionFormat "full"
    }
    systemProperty "spring.profiles.active", "test"
    maxParallelForks = Runtime.runtime.availableProcessors().intdiv(2) ?: 1
}

bootJar {
    archiveBaseName = 'core-service'
    archiveVersion = project.version
}

springBoot {
    buildInfo()
}

configurations {
    compileOnly {
        extendsFrom annotationProcessor
    }
}

tasks.named('wrapper') {
    gradleVersion = '8.2.0'
    distributionType = Wrapper.DistributionType.BIN
}