# Human Tasks:
# 1. Generate and securely store base64-encoded values for all secrets using a secure method
# 2. Ensure encryption-at-rest is enabled in the Kubernetes cluster
# 3. Configure RBAC policies to restrict access to these secrets
# 4. Set up audit logging for secret access
# 5. Implement regular secret rotation mechanism
# 6. Verify SOC 2 Type II and PCI DSS compliance requirements for secret management

# Kubernetes version: 1.27.x

# Addresses requirement: Data Security
# Location: Technical Specification/Security Considerations/Data Security/Encryption Standards
# Description: Field-level encryption for PII and sensitive data using AES-256 encryption
---
apiVersion: v1
kind: Secret
metadata:
  name: app-secrets
  namespace: mca-system
  labels:
    app: mca-system
    component: secrets
  annotations:
    encryption.kubernetes.io/v1: aescbc # Ensures AES-256 encryption at rest
type: Opaque
data:
  db-username: base64_encoded_value
  db-password: base64_encoded_value
  encryption-key: base64_encoded_value
  aws-access-key: base64_encoded_value
  aws-secret-key: base64_encoded_value

# Addresses requirement: Security Controls
# Location: Technical Specification/Security Considerations/Security Controls
# Description: Secure management of credentials and sensitive configuration data
---
apiVersion: v1
kind: Secret
metadata:
  name: email-credentials
  namespace: mca-system
  labels:
    app: mca-system
    component: secrets
  annotations:
    encryption.kubernetes.io/v1: aescbc
type: Opaque
data:
  email-username: base64_encoded_value
  email-password: base64_encoded_value
  email-host: base64_encoded_value
  email-port: base64_encoded_value

# Addresses requirement: Compliance Protocols
# Location: Technical Specification/Security Considerations/Compliance Protocols
# Description: SOC 2 Type II and PCI DSS compliance requirements for secure credential management
---
apiVersion: v1
kind: Secret
metadata:
  name: rabbitmq-credentials
  namespace: mca-system
  labels:
    app: mca-system
    component: secrets
  annotations:
    encryption.kubernetes.io/v1: aescbc
type: Opaque
data:
  rabbitmq-username: base64_encoded_value
  rabbitmq-password: base64_encoded_value

---
apiVersion: v1
kind: Secret
metadata:
  name: document-service-secrets
  namespace: mca-system
  labels:
    app: document-service
    component: secrets
  annotations:
    encryption.kubernetes.io/v1: aescbc
type: Opaque
data:
  s3-access-key: base64_encoded_value
  s3-secret-key: base64_encoded_value
  ocr-api-key: base64_encoded_value