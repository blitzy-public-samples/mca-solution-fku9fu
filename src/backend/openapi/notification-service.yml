openapi: 3.0.0
info:
  title: Dollar Funding MCA Notification Service API
  version: 1.0.0
  description: API for managing webhook configurations and notifications in the MCA application processing system

servers:
  - url: /api/v1
    description: API version 1

# Addresses requirement: Integration Layer - REST APIs and webhooks for system integration
paths:
  /webhooks:
    post:
      summary: Register a new webhook endpoint
      description: Create a new webhook configuration for receiving notifications
      operationId: createWebhook
      tags:
        - webhooks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookCreate'
      responses:
        '201':
          description: Webhook successfully created
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    get:
      summary: List all webhook configurations
      description: Retrieve all registered webhook endpoints
      operationId: listWebhooks
      tags:
        - webhooks
      security:
        - bearerAuth: []
      parameters:
        - name: page
          in: query
          schema:
            type: integer
            minimum: 1
            default: 1
          description: Page number for pagination
        - name: limit
          in: query
          schema:
            type: integer
            minimum: 1
            maximum: 100
            default: 20
          description: Number of items per page
        - name: active
          in: query
          schema:
            type: boolean
          description: Filter by webhook active status
      responses:
        '200':
          description: List of webhook configurations
          content:
            application/json:
              schema:
                type: object
                properties:
                  data:
                    type: array
                    items:
                      $ref: '#/components/schemas/Webhook'
                  pagination:
                    $ref: '#/components/schemas/Pagination'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

  /webhooks/{id}:
    parameters:
      - name: id
        in: path
        required: true
        schema:
          type: string
          format: uuid
        description: Webhook configuration ID
    get:
      summary: Get webhook configuration details
      description: Retrieve details of a specific webhook configuration
      operationId: getWebhook
      tags:
        - webhooks
      security:
        - bearerAuth: []
      responses:
        '200':
          description: Webhook configuration details
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    put:
      summary: Update webhook configuration
      description: Modify an existing webhook configuration
      operationId: updateWebhook
      tags:
        - webhooks
      security:
        - bearerAuth: []
      requestBody:
        required: true
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/WebhookUpdate'
      responses:
        '200':
          description: Webhook configuration updated
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Webhook'
        '400':
          $ref: '#/components/responses/BadRequest'
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'
    delete:
      summary: Delete webhook configuration
      description: Remove a webhook configuration
      operationId: deleteWebhook
      tags:
        - webhooks
      security:
        - bearerAuth: []
      responses:
        '204':
          description: Webhook configuration deleted
        '404':
          $ref: '#/components/responses/NotFound'
        '401':
          $ref: '#/components/responses/Unauthorized'
        '403':
          $ref: '#/components/responses/Forbidden'

# Addresses requirement: Webhook Configuration - Defines webhook endpoint structure and configuration
components:
  schemas:
    WebhookCreate:
      type: object
      required:
        - url
        - events
      properties:
        url:
          type: string
          format: uri
          maxLength: 2048
          description: The endpoint URL where notifications will be sent
        events:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventType'
          minItems: 1
          description: List of events to subscribe to
        description:
          type: string
          maxLength: 500
          description: Optional description of the webhook's purpose
        active:
          type: boolean
          default: true
          description: Whether the webhook is active
        secret:
          type: string
          minLength: 32
          maxLength: 128
          description: Secret key for signing webhook payloads

    WebhookUpdate:
      type: object
      properties:
        url:
          type: string
          format: uri
          maxLength: 2048
          description: The endpoint URL where notifications will be sent
        events:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventType'
          minItems: 1
          description: List of events to subscribe to
        description:
          type: string
          maxLength: 500
          description: Optional description of the webhook's purpose
        active:
          type: boolean
          description: Whether the webhook is active
        secret:
          type: string
          minLength: 32
          maxLength: 128
          description: Secret key for signing webhook payloads

    Webhook:
      type: object
      required:
        - id
        - url
        - events
        - active
        - createdAt
        - updatedAt
      properties:
        id:
          type: string
          format: uuid
          description: Unique identifier for the webhook
        url:
          type: string
          format: uri
          maxLength: 2048
          description: The endpoint URL where notifications will be sent
        events:
          type: array
          items:
            $ref: '#/components/schemas/WebhookEventType'
          description: List of events subscribed to
        active:
          type: boolean
          description: Whether the webhook is active
        description:
          type: string
          maxLength: 500
          description: Optional description of the webhook's purpose
        createdAt:
          type: string
          format: date-time
          description: Timestamp when the webhook was created
        updatedAt:
          type: string
          format: date-time
          description: Timestamp when the webhook was last updated

    WebhookEventType:
      type: string
      enum:
        - APPLICATION_RECEIVED
        - DOCUMENT_PROCESSED
        - REVIEW_REQUIRED
        - PROCESSING_COMPLETE
        - DATA_EXTRACTION_FAILED
      description: Types of events that can trigger webhook notifications

    Pagination:
      type: object
      properties:
        total:
          type: integer
          minimum: 0
          description: Total number of items
        pages:
          type: integer
          minimum: 1
          description: Total number of pages
        page:
          type: integer
          minimum: 1
          description: Current page number
        limit:
          type: integer
          minimum: 1
          description: Items per page

  responses:
    BadRequest:
      description: Invalid request
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Unauthorized:
      description: Authentication required
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    Forbidden:
      description: Permission denied
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'
    NotFound:
      description: Resource not found
      content:
        application/json:
          schema:
            $ref: '#/components/schemas/Error'

    Error:
      type: object
      required:
        - code
        - message
      properties:
        code:
          type: string
          description: Error code
        message:
          type: string
          description: Error message
        details:
          type: object
          description: Additional error details

  securitySchemes:
    bearerAuth:
      type: http
      scheme: bearer
      bearerFormat: JWT
      description: JWT token for API authentication